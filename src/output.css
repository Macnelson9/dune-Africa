/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-white: #fff;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .flex {
    display: flex;
  }
  .table {
    display: table;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .resize {
    resize: both;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-cyan-500 {
    background-color: var(--color-cyan-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
}
*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
:root {
  --orange-500: #f4603e;
  --blue-500: #1e1870;
  --grey-700: #f4603e;
  --white: #fff;
  --orange-100: #feefec;
  --blue-100: #f2f2ff;
  --border--border-36: #0000005c;
  --border--border-13: #00000021;
  --border--border-08: #00000014;
}
html {
  font-family: "IBM Plex Sans", sans-serif;
  scroll-behavior: smooth;
}
img {
  max-width: 100%;
  width: 100%;
}
ul {
  margin-left: 0;
}
li {
  list-style-type: none;
}
h1, h2, h3 {
  font-family: "IBM Plex Serif", sans-serif;
}
a {
  text-decoration: none;
}
.logo {
  width: 80px;
  height: 40px;
}
.main-nav-ul {
  display: none;
}
.hamburger, .close-btn {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: .15rem;
  width: 31.28px;
  height: 31.28px;
  background: #e2e2e2;
  border: none;
  border-radius: 4px;
}
.hamburger span {
  width: 15px;
  height: 2px;
  background-color: #1a1a1a;
  border-radius: 2px;
}
.close-btn span {
  width: 15px;
  height: 2px;
  background-color: #1a1a1a;
  border-radius: 2px;
}
.close-btn span:nth-child(1) {
  transform: translate3d(0, 2px, 0) rotate(45deg);
}
.close-btn span:nth-child(2) {
  transform: translate3d(0, -3.5px, 0) rotate(-45deg);
}
header nav, .top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: .8rem 1rem;
  position: relative;
  border-bottom: 1px solid var(--border--border-08);
}
.mobile-nav {
  display: none;
  flex-direction: column;
  gap: 30px;
  inset: 0;
  height: 100vh;
  z-index: 99;
  background: #fff;
  position: absolute;
  opacity: 0;
  visibility: hidden;
}
.mobile-nav-ul {
  display: flex;
  flex-direction: column;
  gap: 30px;
  padding-left: .8rem;
  padding-right: .8rem;
}
.mobile-nav-ul li a {
  color: #1a1a1a;
}
.hero {
  padding: 3rem 2rem;
}
.hero-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 20px;
  text-align: center;
}
.hero-container h1 {
  color: var(--blue-500);
  font-size: 2.4rem;
  font-weight: 500;
  line-height: 1.2;
}
.hero-container p {
  color: var(--blue-500);
}
.vid-sec {
  padding: .8rem 1rem;
}
.vid-sec-container {
  display: flex;
  flex-direction: column;
  gap: 30px;
  text-align: center;
}
.vid-sec-container h2 {
  color: var(--orange-500);
  animation: 3s ease 1s infinite bounce;
}
.about {
  background: var(--blue-500);
  padding: 2rem 1rem;
}
.about-container {
  display: flex;
  flex-direction: column;
  gap: 20px;
}
.text-area {
  display: flex;
  flex-direction: column;
  gap: 15px;
  color: var(--white);
}
.text-area p {
  line-height: 1.5rem;
}
.contact {
  padding: 2rem 1rem;
}
.contact-container {
  display: flex;
  flex-direction: column;
  gap: 20px;
  color: var(--blue-500);
}
.contact-left {
  display: flex;
  flex-direction: column;
  gap: 15px;
}
form {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
form input {
  padding: .5rem;
  padding-left: 10px;
  border-radius: 7px;
  border: 1px solid var(--border--border-08);
}
form textarea {
  padding: .5rem;
  border-radius: 7px;
  border: 1px solid var(--border--border-08);
}
form input:focus, form textarea:focus {
  outline: 1.5px solid var(--blue-500);
}
form input::placeholder, form textarea::placeholder {
  font-family: "IBM Plex Sans", sans-serif;
  font-size: .8rem;
}
#submit {
  font-family: "IBM Plex Sans", sans-serif;
  font-size: 1rem;
  padding: .7rem;
  border-radius: 5px;
  background-color: var(--orange-500);
  border: none;
  color: var(--white);
  margin-top: 10px;
}
.location {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-top: 10px;
}
.socials {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  margin-top: 10px;
}
footer {
  padding: 2rem 1rem;
  background: var(--blue-500);
}
.footer-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 20px;
  color: var(--white);
}
@keyframes bounce {
  0%,20%,50%,80%,100% {
    transform: translate3d(0, 0, 0);
  }
  40% {
    transform: translate3d(0, -20px, 0);
  }
  60% {
    transform: translate3d(0, -10px, 0);
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-outline-style: solid;
    }
  }
}
